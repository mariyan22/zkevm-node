# provision.yml

---
- name: Provision EVM Nodes
  hosts: evm-node-*
  become: yes
  gather_facts: yes

  tasks:
    - name: Install necessary packages
      yum:
        name: "{{ item }}"
        state: present
      loop:
        - docker
        - python3-pip  # Example: Install required packages

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Install Docker Compose
      command:
        cmd: pip3 install docker-compose --ignore-installed
        
    - name: Login to Amazon ECR
      shell: |
        aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 104047360514.dkr.ecr.eu-central-1.amazonaws.com
      environment:
        AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
        AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
        AWS_DEFAULT_REGION: "eu-central-1"
      become: yes
      become_user: root
        
    - name: Pull Docker images
      shell: docker pull {{ item }}
      loop:
        - 104047360514.dkr.ecr.eu-central-1.amazonaws.com/go-ethereum:latest
        - 104047360514.dkr.ecr.eu-central-1.amazonaws.com/zkevm-node:latest
        - 104047360514.dkr.ecr.eu-central-1.amazonaws.com/zkevm-contracts:latest
      become: yes
      become_user: root

    - name: Create Ethereum Data Directory
      file:
        path: /var/ethereum-data
        state: directory
      become: yes
  
    - name: Configure Ethereum Nodes
      command: |
        docker run -d --name eth_node_{{ inventory_hostname }} \
          -v /path/to/data:/data 104047360514.dkr.ecr.eu-central-1.amazonaws.com/go-ethereum:latest \
          --datadir /data \
          --networkid 1234 \
          --rpc \
          --rpcaddr "0.0.0.0" \
          --rpcport 8545
      async: 3600
      poll: 0

    - name: Define ZKEVM Network
      set_fact:
        zkevm_net: "testnet"

    - name: Define Installation Path
      set_fact:
        zkevm_dir: "/opt/ethereum/zkevm"

    - name: Define Config Directory
      set_fact:
        zkevm_config_dir: "/opt/ethereum/config"  # Update to your preferred config directory

    - name: Ensure Installation Directory exists
      file:
        path: "{{ zkevm_dir }}"
        state: directory
        mode: '0755'
        owner: root
        group: root
      become: yes

    - name: Ensure Config Directory exists
      file:
        path: "{{ zkevm_config_dir }}"
        state: directory
        mode: '0755'
        owner: root
        group: root
      become: yes

    - name: Download ZKEVM Artifacts
      shell: |
        curl -L https://github.com/0xPolygonHermez/zkevm-node/releases/latest/download/{{ zkevm_net }}.zip > {{ zkevm_net }}.zip && \
        unzip -o {{ zkevm_net }}.zip -d {{ zkevm_dir }} && \
        rm {{ zkevm_net }}.zip
      args:
        executable: /bin/bash
      become_user: root  # Use root or the appropriate user depending on your setup


    - name: Copy Env Parameters File
      copy:
        src: "{{ zkevm_dir }}/{{ zkevm_net }}/example.env"
        dest: "{{ zkevm_config_dir }}/.env"
        remote_src: yes
      become_user: root  # Use root or the appropriate user depending on your setup

    - name: Set environment variable values in .env file
      lineinfile:
        path: "{{ zkevm_config_dir }}/.env"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - { regexp: '^ZKEVM_NODE_ETHERMAN_URL=', line: 'ZKEVM_NODE_ETHERMAN_URL=http://localhost:8545' }
        - { regexp: '^ZKEVM_NETWORK=', line: 'ZKEVM_NETWORK=testnet' }
        - { regexp: '^ZKEVM_NODE_STATEDB_DATA_DIR=', line: 'ZKEVM_NODE_STATEDB_DATA_DIR=/opt/zkevm/state_db_data' }
        - { regexp: '^ZKEVM_NODE_POOLDB_DATA_DIR=', line: 'ZKEVM_NODE_POOLDB_DATA_DIR=/opt/zkevm/pool_db_data' }
      become_user: root

    - name: Ensure Config Directory exists
      file:
        path: "{{ zkevm_config_dir }}"
        state: directory
        mode: '0755'
        owner: root
        group: root
      become: yes

    - name: Ensure postgres user exists
      user:
        name: postgres
        system: yes
        shell: /sbin/nologin
    
    - name: Create directories for zkEVM data storage
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
        owner: postgres
        group: postgres
      loop:
        - /opt/zkevm/state_db_data
        - /opt/zkevm/pool_db_data

    - name: Set ZKEVM_NODE_ETHERMAN_URL in .env
      lineinfile:
        path: "{{ zkevm_config_dir }}/.env"
        regexp: '^ZKEVM_NODE_ETHERMAN_URL='
        line: 'ZKEVM_NODE_ETHERMAN_URL=http://localhost:8545'
        create: yes

    - name: Set ZKEVM_NODE_STATEDB_DATA_DIR in .env
      lineinfile:
        path: "{{ zkevm_config_dir }}/.env"
        regexp: '^ZKEVM_NODE_STATEDB_DATA_DIR='
        line: 'ZKEVM_NODE_STATEDB_DATA_DIR=/opt/zkevm/state_db_data'
        create: yes

    - name: Set ZKEVM_NODE_POOLDB_DATA_DIR in .env
      lineinfile:
        path: "{{ zkevm_config_dir }}/.env"
        regexp: '^ZKEVM_NODE_POOLDB_DATA_DIR='
        line: 'ZKEVM_NODE_POOLDB_DATA_DIR=/opt/zkevm/pool_db_data'
        create: yes

    - name: Start ZKEVM Node
      shell: |
        docker-compose -f {{ zkevm_dir }}/{{ zkevm_net }}/docker-compose.yml up -d
      args:
        executable: /bin/bash
        chdir: "{{ zkevm_config_dir }}"  # This sets the working directory to where your .env file is.
      become_user: root  # Use root or the appropriate user depending on your setup

    - name: Verify Running Containers
      shell: |
        docker-compose -f {{ zkevm_dir }}/{{ zkevm_net }}/docker-compose.yml ps
      args:
        executable: /bin/bash
        chdir: "{{ zkevm_config_dir }}"  # Again, set the working directory
      become_user: root  # Use root or the appropriate user depending on your setup

