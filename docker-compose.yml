version: "3.5"
networks:
  default:
    name: zkevm
services:
  geth:
    image: 104047360514.dkr.ecr.eu-central-1.amazonaws.com/go-ethereum:latest
    container_name: eth_node_evm-node-0
    restart: always
    command: >
      --goerli
      --http
      --http.addr 0.0.0.0
      --http.port 8545
      --port 30303
      --http.api admin,db,eth,net,web3,personal
      --syncmode full
      --cache=2048
      --verbosity 4
      --http.vhosts "*"
      --http.corsdomain "*"
    volumes:
      - ./config/genesis.json:/app/genesis.json
      - ./entryscript.sh:/app/entryscript.sh
      - ./data/geth:/root/.ethereum
    entrypoint: ["/app/entryscript.sh"]
    ports:
      - "8545:8545"
      - "30303:30303"
      - "30303:30303/udp"
  contracts:
    image: 104047360514.dkr.ecr.eu-central-1.amazonaws.com/zkevm-contracts:latest
    environment:
      - DEPLOYMENT_PRIVATE_KEY=0xb851c1d8824dd5c16640036624b5fac59561f1614dce26c2d07fc9d4021f1c38
      - INFURA_KEY=https://goerli.infura.io/v3/3a6a85935fd14f568086f822213d9c42
    ports:
      - "8547:8545"
    depends_on:
      - geth

  zkevm-rpc:
    container_name: zkevm-rpc
    restart: unless-stopped
    depends_on:
      zkevm-pool-db:
        condition: service_healthy
      zkevm-state-db:
        condition: service_healthy
      zkevm-sync:
        condition: service_started
    image: 104047360514.dkr.ecr.eu-central-1.amazonaws.com/zkevm-node:latest
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    ports:
      - 8546:8545
      - 9091:9091 # needed if metrics enabled
    environment:
      - ZKEVM_NODE_ETHERMAN_URL=${ZKEVM_NODE_ETHERMAN_URL}
    volumes:
      - ${ZKEVM_ADVANCED_CONFIG_DIR:-./config/environments/testnet}/node.config.toml:/app/config.toml
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-node run --network ${ZKEVM_NETWORK} --cfg /app/config.toml --components rpc"

  zkevm-sync:
    container_name: zkevm-sync
    restart: unless-stopped
    depends_on:
      zkevm-state-db:
        condition: service_healthy
    image: 104047360514.dkr.ecr.eu-central-1.amazonaws.com/zkevm-node:latest
    ports:
      - 9092:9091 # needed if metrics enabled
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    environment:
      - ZKEVM_NODE_ETHERMAN_URL=${ZKEVM_NODE_ETHERMAN_URL}
    volumes:
      - ${ZKEVM_ADVANCED_CONFIG_DIR:-./config/environments/testnet}/node.config.toml:/app/config.toml
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-node run --network ${ZKEVM_NETWORK} --cfg /app/config.toml --components synchronizer"

  zkevm-state-db:
    container_name: zkevm-state-db
    restart: unless-stopped
    image: postgres:15
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    volumes:
      - ./db/scripts/init_prover_db.sql:/docker-entrypoint-initdb.d/init.sql
      - ${ZKEVM_NODE_STATEDB_DATA_DIR}:/var/lib/postgresql/data
      - ${ZKEVM_ADVANCED_CONFIG_DIR:-./config/environments/testnet}/postgresql.conf:/etc/postgresql.conf
    environment:
      - POSTGRES_USER=state_user
      - POSTGRES_PASSWORD=state_password
      - POSTGRES_DB=state_db
    command:
      - "postgres"
      - "-N"
      - "500"
      - "-c"
      - "config_file=/etc/postgresql.conf"

  zkevm-pool-db:
    container_name: zkevm-pool-db
    restart: unless-stopped
    image: postgres:15
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5433:5432
    volumes:
      - ${ZKEVM_NODE_POOLDB_DATA_DIR}:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=pool_user
      - POSTGRES_PASSWORD=pool_password
      - POSTGRES_DB=pool_db
    command:
      - "postgres"
      - "-N"
      - "500"

  zkevm-prover:
    container_name: zkevm-prover
    restart: unless-stopped
    image: hermeznetwork/zkevm-prover:v2.2.0
    depends_on:
      zkevm-state-db:
        condition: service_healthy
    ports:
      - 50061:50061 # MT
      - 50071:50071 # Executor
    volumes:
      - ${ZKEVM_ADVANCED_CONFIG_DIR:-./config/environments/testnet}/prover.config.json:/usr/src/app/config.json
    command: >
      zkProver -c /usr/src/app/config.json
